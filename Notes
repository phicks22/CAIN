Table of Contents:

Introduction/Objective:

Coding Process:

Ant_Lymph

210130
The Antigen class organizes the properties and functionalities of a chosen antigen from the Immune Epitope
Database (IEDB). The Lymphocyte class has similar qualities, but the paratope is a randomly generated aa sequence of
the same length as the epitope.Experimental properties include epitope, pop, and n for both the Antigen and Epitope
classes. Each variable will be parameterized while the others remain constant to identify patterns and significance of
the variableâ€™s dominance over the system.


Main

210130
The Main class is an environment where all classes interact and perform their functionalities with one another.
The function 'binding' simulates the initial binding of the antigen and lymphocyte where the probability of binding is
calculated by the percent match of the amino acid binding sites.

210203
The function utilizes a for loop to iterate through each index of the string "a" and match it to the same index
of string "l". Each time both indices match, the "count" increases by 1. By dividing "count" by the length of "a", the
percent match is calculated and is stored as "pr_bind".A while loop is then utilized to run a randomly chosen number
from 0-1 and if that number is less than or equal to the probability of not binding, the counter "bind_time" increases
by 1 and the boolean "bound" = FALSE. Once the random number is greater than than the probability of not binding, the
"self.iteration_counts" dictionary is appended with the key "init_bind" and the value "bind_time". Print statements
were used to test the accuracy of each component of the function.

210323
Once I transferred the code into the PyCharm environment, I noticed that the binding function would continually run for
too long. I realized that if there was a 0% binding chance, the loop would continuously run (but not in Jupyter Lab
which was strange). I added a print statement as a return telling the user that there is no chance of the sequences
to bind.

210327
I identified that the lymph1.paratope property is not functioning properly in the Main class binding function. The
paratope property transfers to the Main file correctly, confirmed by a print statement, however it does not get
recognized by the binding function even though ant1.epitope functions correctly. To fix this, I called instances of the
Antigen and Lymphocyte classes in the Main file and both properties epitope and paratope ran properly, confirmed by
print statements. The next issue I encountered was the infinite while loop if there was no probability of binding
between the two strings. To rectify this I added a break statement directly after the beginning of the while loop so
that if count == 0, the loop will not run and the Init_binding_time = 0.

Testing:

